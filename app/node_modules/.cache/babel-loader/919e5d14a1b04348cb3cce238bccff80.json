{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  // const { id } = props;\n  const [movie, setMovie] = useState({});\n  const {\n    title,\n    director,\n    metascore\n  } = movie;\n\n  const fetchMovie = id => {\n    axios.get(`http://localhost:5000/api/movies/${id}`).then(response => {\n      // setMovie(response);\n      console.log(\"This movie =>\", response);\n    }).catch(err => {\n      console.log(\"FETCHING ERROR =>\", err.message);\n    });\n  };\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Smoke test!\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Directed By: \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, director)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Metascore: \", metascore), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Starring:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MoviePageComponent;","map":{"version":3,"sources":["/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js"],"names":["React","useEffect","useState","axios","MoviePageComponent","props","movie","setMovie","title","director","metascore","fetchMovie","id","get","then","response","console","log","catch","err","message","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAiCJ,KAAvC;;AAEA,QAAMK,UAAU,GAAGC,EAAE,IAAI;AACvBT,IAAAA,KAAK,CACFU,GADH,CACQ,oCAAmCD,EAAG,EAD9C,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAA7B;AACD,KALH,EAMGG,KANH,CAMSC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,GAAG,CAACC,OAArC;AACD,KARH;AASD,GAVD;;AAYAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,EAAE,GAAGP,KAAK,CAACgB,KAAN,CAAYC,MAAZ,CAAmBV,EAA9B;AACAD,IAAAA,UAAU,CAACC,EAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADf,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBC,SAAjB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,CADF;AAkBD,CA1CD;;AA4CA,eAAeN,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  // const { id } = props;\n\n  const [movie, setMovie] = useState({});\n\n  const { title, director, metascore } = movie;\n\n  const fetchMovie = id => {\n    axios\n      .get(`http://localhost:5000/api/movies/${id}`)\n      .then(response => {\n        // setMovie(response);\n        console.log(\"This movie =>\", response);\n      })\n      .catch(err => {\n        console.log(\"FETCHING ERROR =>\", err.message);\n      });\n  };\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n\n  return (\n    <div className=\"movie-page-container\">\n      Smoke test!\n      <h3>{title}</h3>\n      <div>\n        Directed By: <em>{director}</em>\n      </div>\n      <div>Metascore: {metascore}</div>\n      <div>\n        Starring:\n        <div>\n          {/* {movie.stars.map(star => (\n            <li>{}</li>\n          ))} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePageComponent;\n"]},"metadata":{},"sourceType":"module"}