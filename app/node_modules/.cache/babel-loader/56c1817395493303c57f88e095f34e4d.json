{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  const {\n    id\n  } = props;\n  const [movie, setMovie] = useState({});\n  const {\n    title,\n    director,\n    metascore,\n    stars\n  } = movie;\n\n  const fetchMovie = id => {\n    axios.get(`http://localhost:5000/api/movies/${id}`).then(res => {\n      setMovie(res.data);\n    }).catch(err => {\n      console.log(\"FETCHING ERROR =>\", err.message);\n    });\n  };\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Smoke test!\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Directed By: \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }\n  }, director)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Metascore: \", metascore), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Starring:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, stars.map(star => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, star)))));\n};\n\nexport default MoviePageComponent;","map":{"version":3,"sources":["/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js"],"names":["React","useEffect","useState","axios","MoviePageComponent","props","id","movie","setMovie","title","director","metascore","stars","fetchMovie","get","then","res","data","catch","err","console","log","message","match","params","map","star"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAf;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAAwCL,KAA9C;;AAEA,QAAMM,UAAU,GAAGP,EAAE,IAAI;AACvBH,IAAAA,KAAK,CACFW,GADH,CACQ,oCAAmCR,EAAG,EAD9C,EAEGS,IAFH,CAEQC,GAAG,IAAI;AACXR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,OAArC;AACD,KAPH;AAQD,GATD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,EAAE,GAAGD,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBlB,EAA9B;AACAO,IAAAA,UAAU,CAACP,EAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADf,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBC,SAAjB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADD,CADH,CAFF,CAPF,CADF;AAkBD,CAzCD;;AA2CA,eAAetB,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  const { id } = props;\n\n  const [movie, setMovie] = useState({});\n\n  const { title, director, metascore, stars } = movie;\n\n  const fetchMovie = id => {\n    axios\n      .get(`http://localhost:5000/api/movies/${id}`)\n      .then(res => {\n        setMovie(res.data);\n      })\n      .catch(err => {\n        console.log(\"FETCHING ERROR =>\", err.message);\n      });\n  };\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n\n  return (\n    <div className=\"movie-page-container\">\n      Smoke test!\n      <h3>{title}</h3>\n      <div>\n        Directed By: <em>{director}</em>\n      </div>\n      <div>Metascore: {metascore}</div>\n      <div>\n        Starring:\n        <ul>\n          {stars.map(star => (\n            <li>{star}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePageComponent;\n"]},"metadata":{},"sourceType":"module"}