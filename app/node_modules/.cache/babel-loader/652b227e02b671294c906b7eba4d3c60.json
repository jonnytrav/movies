{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../index.css\";\nimport StarList from \"./StarList.js\";\n\nconst MoviePageComponent = props => {\n  const [movie, setMovie] = useState({});\n  const [stars, setStars] = useState([]);\n  const {\n    title,\n    director,\n    metascore\n  } = movie;\n\n  const fetchMovie = id => {\n    axios.get(`http://localhost:5000/api/movies/${id}`).then(response => {\n      setMovie(response.data); // console.log(\"This movie =>\", response.data);\n\n      setStars(response.data.stars);\n    }).catch(err => {\n      console.log(\"FETCHING ERROR =>\", err.message);\n    });\n  };\n\n  const saveMovie = movieToSave => {\n    if (props.savedMovies.includes(movieToSave)) {\n      return;\n    } else {\n      props.addToSaved(movieToSave);\n    }\n  }; // *********** FOR DEBUGGING ****************\n\n\n  useEffect(() => {\n    console.log(\"stars =>\", stars);\n    console.log(\"movie =>\", movie);\n  }, [movie, stars]); // *******************************************\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Smoke test!\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Directed By: \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }, director)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Metascore: \", metascore), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Starring:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StarList, {\n    stars: stars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveMovie(movie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nexport default MoviePageComponent;","map":{"version":3,"sources":["/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js"],"names":["React","useEffect","useState","axios","StarList","MoviePageComponent","props","movie","setMovie","stars","setStars","title","director","metascore","fetchMovie","id","get","then","response","data","catch","err","console","log","message","saveMovie","movieToSave","savedMovies","includes","addToSaved","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAiCN,KAAvC;;AAEA,QAAMO,UAAU,GAAGC,EAAE,IAAI;AACvBZ,IAAAA,KAAK,CACFa,GADH,CACQ,oCAAmCD,EAAG,EAD9C,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChBV,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR,CADgB,CAEhB;;AACAT,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAT,CAAcV,KAAf,CAAR;AACD,KANH,EAOGW,KAPH,CAOSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,OAArC;AACD,KATH;AAUD,GAXD;;AAaA,QAAMC,SAAS,GAAGC,WAAW,IAAI;AAC/B,QAAIpB,KAAK,CAACqB,WAAN,CAAkBC,QAAlB,CAA2BF,WAA3B,CAAJ,EAA6C;AAC3C;AACD,KAFD,MAEO;AACLpB,MAAAA,KAAK,CAACuB,UAAN,CAAiBH,WAAjB;AACD;AACF,GAND,CAnBkC,CA2BlC;;;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,KAAxB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBhB,KAAxB;AACD,GAHQ,EAGN,CAACA,KAAD,EAAQE,KAAR,CAHM,CAAT,CA7BkC,CAkClC;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,EAAE,GAAGT,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAAmBhB,EAA9B;AACAD,IAAAA,UAAU,CAACC,EAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADf,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBC,SAAjB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMgB,SAAS,CAAClB,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAbF,CADF;AAmBD,CA5DD;;AA8DA,eAAeF,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"../index.css\";\nimport StarList from \"./StarList.js\";\n\nconst MoviePageComponent = props => {\n  const [movie, setMovie] = useState({});\n  const [stars, setStars] = useState([]);\n\n  const { title, director, metascore } = movie;\n\n  const fetchMovie = id => {\n    axios\n      .get(`http://localhost:5000/api/movies/${id}`)\n      .then(response => {\n        setMovie(response.data);\n        // console.log(\"This movie =>\", response.data);\n        setStars(response.data.stars);\n      })\n      .catch(err => {\n        console.log(\"FETCHING ERROR =>\", err.message);\n      });\n  };\n\n  const saveMovie = movieToSave => {\n    if (props.savedMovies.includes(movieToSave)) {\n      return;\n    } else {\n      props.addToSaved(movieToSave);\n    }\n  };\n\n  // *********** FOR DEBUGGING ****************\n\n  useEffect(() => {\n    console.log(\"stars =>\", stars);\n    console.log(\"movie =>\", movie);\n  }, [movie, stars]);\n\n  // *******************************************\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n\n  return (\n    <div className=\"movie-page-container\">\n      Smoke test!\n      <h3>{title}</h3>\n      <div>\n        Directed By: <em>{director}</em>\n      </div>\n      <div>Metascore: {metascore}</div>\n      <div>\n        Starring:\n        <div>\n          <StarList stars={stars} />\n        </div>\n      </div>\n      <div>\n        <button onClick={() => saveMovie(movie)}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePageComponent;\n"]},"metadata":{},"sourceType":"module"}