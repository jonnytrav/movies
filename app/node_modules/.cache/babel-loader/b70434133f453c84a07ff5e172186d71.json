{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  // const { id } = props;\n  const [movie, setMovie] = useState({});\n  const [stars, setStars] = useState([]);\n  const {\n    title,\n    director,\n    metascore\n  } = movie;\n\n  const fetchMovie = id => {\n    axios.get(`http://localhost:5000/api/movies/${id}`).then(response => {\n      setMovie(response.data); // console.log(\"This movie =>\", response.data);\n\n      setStars(response.data.stars);\n    }).catch(err => {\n      console.log(\"FETCHING ERROR =>\", err.message);\n    });\n  }; // *********** FOR DEBUGGING ****************\n\n\n  useEffect(() => {\n    console.log(\"stars =>\", stars);\n    console.log(\"movie =>\", movie);\n  }, [movie, stars]); // *******************************************\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Smoke test!\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Directed By: \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, director)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Metascore: \", metascore), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Starring:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, stars ? movie.stars.map(star => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Starring...\"))));\n};\n\nexport default MoviePageComponent;","map":{"version":3,"sources":["/Users/jonathantraverso/Documents/GitHub/movie-app/app/src/components/MoviePage.js"],"names":["React","useEffect","useState","axios","MoviePageComponent","props","movie","setMovie","stars","setStars","title","director","metascore","fetchMovie","id","get","then","response","data","catch","err","console","log","message","match","params","map","star"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAiCN,KAAvC;;AAEA,QAAMO,UAAU,GAAGC,EAAE,IAAI;AACvBX,IAAAA,KAAK,CACFY,GADH,CACQ,oCAAmCD,EAAG,EAD9C,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChBV,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR,CADgB,CAEhB;;AACAT,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAT,CAAcV,KAAf,CAAR;AACD,KANH,EAOGW,KAPH,CAOSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,OAArC;AACD,KATH;AAUD,GAXD,CARkC,CAqBlC;;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,KAAxB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBhB,KAAxB;AACD,GAHQ,EAGN,CAACA,KAAD,EAAQE,KAAR,CAHM,CAAT,CAvBkC,CA4BlC;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,EAAE,GAAGT,KAAK,CAACmB,KAAN,CAAYC,MAAZ,CAAmBX,EAA9B;AACAD,IAAAA,UAAU,CAACC,EAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADf,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBC,SAAjB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,GACJF,KAAK,CAACE,KAAN,CAAYkB,GAAZ,CAAgBC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADI,gBAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAFF,CAPF,CADF;AAoBD,CAvDD;;AAyDA,eAAevB,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\n\nconst MoviePageComponent = props => {\n  // const { id } = props;\n\n  const [movie, setMovie] = useState({});\n  const [stars, setStars] = useState([]);\n\n  const { title, director, metascore } = movie;\n\n  const fetchMovie = id => {\n    axios\n      .get(`http://localhost:5000/api/movies/${id}`)\n      .then(response => {\n        setMovie(response.data);\n        // console.log(\"This movie =>\", response.data);\n        setStars(response.data.stars);\n      })\n      .catch(err => {\n        console.log(\"FETCHING ERROR =>\", err.message);\n      });\n  };\n\n  // *********** FOR DEBUGGING ****************\n\n  useEffect(() => {\n    console.log(\"stars =>\", stars);\n    console.log(\"movie =>\", movie);\n  }, [movie, stars]);\n\n  // *******************************************\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    fetchMovie(id);\n  }, []);\n\n  return (\n    <div className=\"movie-page-container\">\n      Smoke test!\n      <h3>{title}</h3>\n      <div>\n        Directed By: <em>{director}</em>\n      </div>\n      <div>Metascore: {metascore}</div>\n      <div>\n        Starring:\n        <div>\n          {stars ? (\n            movie.stars.map(star => <li>{}</li>)\n          ) : (\n            <div>Starring...</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePageComponent;\n"]},"metadata":{},"sourceType":"module"}